<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>区间和</title>
      <link href="/2023/08/09/%E5%8C%BA%E9%97%B4%E5%92%8C/"/>
      <url>/2023/08/09/%E5%8C%BA%E9%97%B4%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="区间和"><a href="#区间和" class="headerlink" title="区间和"></a>区间和</h1><p>假定有一个无限长的数轴，数轴上每个坐标上的数都是 0。</p><p>现在，我们首先进行 n 次操作，每次操作将某一位置 x 上的数加 c 。</p><p>接下来，进行 m 次询问，每个询问包含两个整数 l 和 r ，你需要求出在区间 [l,r]之间的所有数的和。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含两个整数 n 和 m。</p><p>接下来 n 行，每行包含两个整数 x 和 c 。</p><p>再接下来 m 行，每行包含两个整数 l 和 r 。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>共 m 行，每行输出一个询问中所求的区间内数字和。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>−109≤x≤109,<br>1≤n,m≤105,<br>−109≤l≤r≤109,<br>−10000≤c≤10000</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><p>3 3<br>1 2<br>3 6<br>7 5<br>1 3<br>4 6<br>7 8</p><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><p>8<br>0<br>5</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        long start=System.currentTimeMillis();</span></span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> m=sc.nextInt(),q=sc.nextInt();</span><br><span class="line">        <span class="type">int</span> N=<span class="number">300010</span>;</span><br><span class="line">        <span class="type">int</span> []arr=<span class="keyword">new</span> <span class="title class_">int</span> [N];</span><br><span class="line">        <span class="type">int</span> []sum=<span class="keyword">new</span> <span class="title class_">int</span> [N];</span><br><span class="line">        List&lt;PII&gt;add=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;PII&gt;query=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Integer&gt;alls=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span>(m--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> pos=sc.nextInt(),c=sc.nextInt();</span><br><span class="line">            add.add(<span class="keyword">new</span> <span class="title class_">PII</span>(pos,c));</span><br><span class="line">            alls.add(pos);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(q--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> l=sc.nextInt(),r=sc.nextInt();</span><br><span class="line">            alls.add(l);</span><br><span class="line">            alls.add(r);</span><br><span class="line">            query.add(<span class="keyword">new</span> <span class="title class_">PII</span>(l,r));</span><br><span class="line">        &#125;</span><br><span class="line">        alls.sort((o1,o2)-&gt;o1-o2);</span><br><span class="line">        alls=alls.subList(<span class="number">0</span>,unique(alls));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (PII tp:add</span><br><span class="line">             ) &#123;</span><br><span class="line">           <span class="type">int</span> x=find(tp.first,alls);</span><br><span class="line">           arr[x]+=tp.second;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=alls.size();i++)&#123;</span><br><span class="line">            sum[i]=sum[i-<span class="number">1</span>]+arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (PII tp:query</span><br><span class="line">             ) &#123;</span><br><span class="line">            <span class="type">int</span> l=find(tp.first,alls);</span><br><span class="line">            <span class="type">int</span> r=find(tp.second,alls);</span><br><span class="line">            System.out.println(sum[r]-sum[l-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        long end=System.currentTimeMillis();</span></span><br><span class="line"><span class="comment">//        System.out.println(end-start);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">unique</span><span class="params">(List&lt;Integer&gt;alls)</span>&#123;</span><br><span class="line">        <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;alls.size();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>||alls.get(i)!=alls.get(i-<span class="number">1</span>))&#123;</span><br><span class="line"></span><br><span class="line">                alls.set(j,alls.get(i));</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> x,List&lt;Integer&gt;alls)</span>&#123;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=alls.size()-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(alls.get(mid)&gt;=x)r=mid;</span><br><span class="line">            <span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PII</span>&#123;</span><br><span class="line">    <span class="type">int</span> first;</span><br><span class="line">    <span class="type">int</span> second;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PII</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.first=x;</span><br><span class="line">        <span class="built_in">this</span>.second=y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>压缩文件</title>
      <link href="/2023/08/08/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/"/>
      <url>/2023/08/08/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>贪心思想，先把压缩前的总和求出来，如果总和大于容量，就要进行对其压缩，<br>贪心选择压缩(前后差值最大)最大的。</p><h4 id="文件压缩"><a href="#文件压缩" class="headerlink" title="文件压缩"></a>文件压缩</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="comment">//pair重载按压缩前后差值从大到小排序</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(PII a,PII b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.first-a.second&gt;b.first-b.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL n,d;</span><br><span class="line">    vector&lt;PII&gt;q;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;d;</span><br><span class="line">    LL sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        LL a,b;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        q.<span class="built_in">push_back</span>(&#123;a,b&#125;);</span><br><span class="line">        sum+=a;<span class="comment">//记录压缩前总和</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q.<span class="built_in">begin</span>(),q.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    LL res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(sum&lt;=d)res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> c:q)</span><br><span class="line">    &#123;</span><br><span class="line">        sum-=c.first-c.second;<span class="comment">//贪心减去压缩前后最大差值</span></span><br><span class="line">        res++;<span class="comment">//记录答案</span></span><br><span class="line">        <span class="keyword">if</span>(sum&lt;=d)<span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum&gt;d)res=<span class="number">-1</span>;</span><br><span class="line">    cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
